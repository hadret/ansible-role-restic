---
- name: include OS-specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: define restic_user.
  set_fact:
    restic_user: "{{ __restic_user }}"
  when: restic_user is not defined

- name: define restic_group
  set_fact:
    restic_group: "{{ __restic_group }}"
  when: restic_group is not defined

- name: ensure restic group is present
  group:
    name: "{{ restic_group }}"
    system: true
  when: restic_user != 'root'

- name: ensure restic user is present
  user:
    name: "{{ restic_user }}"
    group: "{{ restic_group }}"
    system: true
    state: present
  when: restic_user != 'root'

- name: ensure restic installation directory exist
  file:
    state: "directory"
    path: "{{ restic_install_path }}"
    mode: "0755"

# TODO: move this to dedicated Setup-*.yml file
- name: install packaged dependencies
  package:
    name: '{{ restic_dependencies | default([]) }}'
    state: present

# TODO: provide installation method from official repositories
- name: download restic binary
  get_url:
    url: "https://github.com/restic/restic/releases/download/v{{ restic_version }}/restic_{{ restic_version }}_{{ ansible_system | lower }}_{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.bz2"  # noqa 204
    dest: "/tmp/restic_{{ restic_version }}_{{ ansible_system | lower }}_{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.bz2"  # noqa 204

- name: decompress restic binary
  shell: "bzip2 -dc /tmp/restic_{{ restic_version }}_{{ ansible_system | lower }}_{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.bz2 > /tmp/restic_{{ restic_version }}_{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}"  # noqa 204
  args:
    creates: "/tmp/restic_{{ restic_version }}_{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}"

- name: copy restic binary
  copy:
    src: "/tmp/restic_{{ restic_version }}_{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}"
    dest: "{{ restic_install_path }}/restic"
    mode: "0750"
    owner: "root"
    group: "{{ restic_group }}"
    remote_src: true
  become: true

- name: set proper capabilities for restic binary
  capabilities:
    path: "{{ restic_install_path }}/restic"
    capability: cap_dac_read_search+ep
    state: present
  when: ansible_system == "Linux"
  become: true

- name: deploy password files
  lineinfile:
    path: "{{ restic_password_file_path }}/.restic-{{ item.name }}"
    line: "{{ item.password }}"
    mode: "0440"
    owner: "root"
    group: "{{ restic_group }}"
    create: true
  with_items: "{{ restic_repos }}"
  no_log: "{{ restic_ansible_nolog|default(item.no_log | default(true)) }}"
  become: true

- name: deploy wrapper scripts
  template:
    src: "restic-wrapper.sh.j2"
    dest: "{{ restic_install_path }}/restic-{{ item.name }}"
    mode: "0770"
    owner: "root"
    group: "{{ restic_group }}"
  with_items: "{{ restic_repos }}"
  no_log: "{{ restic_ansible_nolog|default(item.no_log | default(true)) }}"
  become: true

- name: deploy cron script
  template:
    src: "restic.cron.j2"
    dest: "/etc/cron.d/restic-{{ item.name }}"
    mode: "0640"
  with_items: "{{ restic_repos }}"
  no_log: "{{ restic_ansible_nolog|default(item.no_log | default(true)) }}"
  become: true
